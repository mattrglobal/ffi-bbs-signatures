name: ci-dotnet

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      packageVersion:
        description: "Package Version"
        required: true
        default: "1.0.0"

concurrency:
  group: ${{ github.head_ref }}-dotnet
  cancel-in-progress: true

jobs:
  build_windows:
    if: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir .\out\windows
          cargo build --release
          cp .\target\release\bbs.dll .\out\windows
      # - run: yarn build:windows
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: ./out/windows/*

  build_linux:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: yarn build:linux
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: ./out/linux/*

  build_macos:
    if: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - run: yarn build:macos
      - uses: actions/upload-artifact@v3
        with:
          name: macos
          path: ./out/macos/darwin-x86_64/*

  build_ios:
    if: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - run: yarn build:ios
      - uses: actions/upload-artifact@v3
        with:
          name: ios
          path: ./out/ios/*

  build_android:
    if: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Android NDK
        uses: nttld/setup-ndk@afb4c9964b521afb97c864b7d40b11e6911bd410 # pin@v1.5.0
        id: setup-ndk
        with:
          ndk-version: r27c

      - run: yarn build:android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - uses: actions/upload-artifact@v3
        with:
          name: android
          path: ./out/android/*

  package_nuget:
    if: false
    runs-on: windows-latest
    needs: [build_windows, build_macos, build_linux, build_android, build_ios]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          path: ./wrappers/dotnet/libs
      - run: |
          $packageVersion = node -p -e "require('./package.json').version"
          $manualVersion = "${{ github.event.inputs.packageVersion }}"
          [xml]$projectFile = Get-Content ./wrappers/dotnet/Directory.Build.props
          $projectFile.Project.PropertyGroup[0].Version = if ($manualVersion) { $manualVersion } else { $packageVersion }
          $projectFile.Save("./wrappers/dotnet/Directory.Build.props")
      - uses: microsoft/setup-msbuild@c26a08ba26249b81327e26f6ef381897b6a8754d # pin@v1.0.2
      - run: msbuild /t:restore,build /p:Configuration=Release ./wrappers/dotnet/
      - run: dotnet test -c Release ./wrappers/dotnet/src/BbsSignatures.Tests/
      - run: msbuild /t:restore,build,pack /p:Configuration=Release /p:Bbs_CopyLibsForProjectReference=false ./wrappers/dotnet/
      - uses: actions/upload-artifact@v3
        with:
          name: package-nuget
          path: |
            ./wrappers/dotnet/src/BbsSignatures/bin/Release/*.nupkg
            ./wrappers/dotnet/src/BbsSignatures/bin/Release/*.snupkg
